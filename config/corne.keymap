#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "layer 1";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&kp ESCAPE      &mt NUMBER_1 Q  &mt NUMBER_2 W  &mt NUMBER_3 E  &mt NUMBER_4 R  &mt N5 T       &kp UP_ARROW      &mt NUMBER_6 Y  &mt N7 U        &mt N8 I      &mt N9 O            &mt N0 P                     &kp BSPC
&kp TAB         &kp A           &kp S           &kp D           &mt LEFT_ALT F  &mt LCTRL G    &kp DOWN_ARROW    &mt RCTRL H     &mt LEFT_ALT J  &kp K         &mt LEFT_BRACKET L  &mt RIGHT_BRACKET SEMICOLON  &mt BACKSLASH SQT
&kp LEFT_SHIFT  &kp Z           &kp X           &kp C           &kp V           &kp B          &kp LEFT_ARROW    &kp N           &kp M           &kp COMMA     &kp DOT             &kp FSLH                     &kp RSHIFT
                                &kp SPACE       &kp LGUI        &to 1           &kp SPACE      &kp RIGHT_ARROW   &kp E           &trans          &kp LEFT_WIN
                                                                                               &kp K_PLAY_PAUSE
            >;

            label = "layer 1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            label = "layer 2";
            display-name = "layer 2";
            bindings = <
&kp ESCAPE      &kp F1    &kp F2          &kp F3     &kp F4          &kp F5         &kp UP_ARROW     &kp F6       &kp F7          &kp F8    &kp F9   &kp F10  &kp BSPC
&kp TAB         &kp HOME  &kp UP_ARROW    &kp END    &mt LEFT_ALT F  &mt LCTRL G    &kp DOWN_ARROW   &mt RCTRL H  &mt LEFT_ALT J  &trans    &kp F11  &kp F12  &trans
&kp LEFT_SHIFT  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp INSERT      &kp DELETE     &kp LEFT_ARROW   &trans       &trans          &trans    &trans   &trans   &kp RSHIFT
                          &kp SPACE       &kp LGUI   &trans          &kp SPACE      &kp RIGHT_ARROW  &kp ENTER    &to 0           &kp RWIN
                                                                                    &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
